우선 HAR이 뭔지
Human Activity Recognition -> 인간 활동 인식 = 즉 wisdm 데이터

데이터의 특성 걷기, 달리기, 제스처 에 따라 필요한 윈도우의 크기가 다름.
예를 들어 제스처는 짧고 빠른 동작이기에 0.5초에서 1초 정도로 크기를 잡으면 된다는 것 같음.

------------------------------------------------------------------------------------------------------------------------------

각 동작에 맞는 상황에 윈도우 크기를 조절하여 -> 왜 나누는가??
나누지 않으면 데이터는 시간에 따라 흐르는 연속적인 데이터이고 CNN은 고정된 크기의 입력을 선호함.

예를들어 [one window] -> [one predict]  like  [n개의 sample] -> ["walking"]
그래서
[1초~100초] -> 걷기
[42초~109초] -> 뛰기
[179초->280초] -> 달리기

위와 같은 식으로 일정 길이의 입력(데이터)를 모델에 넣고 라벨을 붙여서 학습할 수 있음.


만약 슬라이딩 윈도우 없이 적용한다면??
중간에 행동이 바뀌면 모델이 헷갈림, 모델은 전체 동작의 평균을 판단하게 되서 자세한 특징을 놓쳐버리게됨

반대로 너무 짧게 창을 자르면??
전체 리듬을 못보게됨-> 무슨 소리냐 하면. 예를들어 간단한 손 제스처는 짧은 동작이라 상관 ㄴ

근데 긴동작(달리기 걷기)등은 이 차이를 구분하려면 어느정도는 지켜봐야지 판단이 가능함.
그래서 어느정도 지켜보고 판단할 시간이 있어야 안정적으로 분류가 가능해짐.

------------------------------------------------------------------------------------------------------------------------------

Stride(윈도우가 이동할때 건너뛰는 간격) 겹침
이건 뭔소리냐 -> stride 길이와 윈도우 길이가 같으면 예를들어 3칸씩 잘랐는데 3칸씩 뛰어넘으면 111 222 333 이런식으로 겹침 x
근데 stride가 < 윈도우길이, 이러면 겹침이 생김

겹침은 무슨 뜻이냐 -> 겹침이 많이 된다 : 걷다가 뛰는 행동이 바뀌는 구간도 잘 파악해서 캐치해 낼 수 있음. 

왜? 전이구간이 많이 포함되기 때문. 풀어쓰면 (걷기1 걷기2 걷기3 앉기1 앉기2 앉기3) 걷다가 앉는 구간 있다고 치고 3칸씩 보면 (걷기2 걷기3 앉기1), (걷기3 앉기1 앉기2) 이런식으로 섞여있는 창이 많이 생김.
결과적으로 전이 구간, 바뀌는 순간을 더 잘 탐지 할 수 있게된다. but 연산량 증가함.

적으면 : 연산량 당연히 줄지만 그 경계구간이 인식하기가 좀 어려워짐.


https://chatgpt.com/s/t_68c7bdf88bf48191a5a29b81c55490b7
이거는 HAR에서 stride나 sliding window 값을 튜닝하는 것애 따라 모델 성능을 좌우한다는 걸 보이려고 올려주신 것 같음.
전이(걷다 뛰기)구간을 최대한 적게 만들고 활동(행동) 주기를 최대한 반영하면서도 연산량 과 시간을 균형있게 맞추는것이 중요함. -> 효율


실제 데이터셋 관행
UCI-HAR: 2.56초 @ 50 Hz → 128 샘플 (50% 겹침)
PAMAP2: 5.12초 @ 100 Hz → 512 샘플
MHEALTH: 5초 @ 50 Hz → 250 샘플
WISDM: 10초 @ 20 Hz → 200 샘플
-by GPT-
